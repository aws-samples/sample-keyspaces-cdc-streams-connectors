keyspaces-cdc-streams{
    stream {
        keyspace-name = "tlp_stress"
        table-name = "keyvalue"
        region = "us-east-1"
        application-name = "keyspaces-stream-example2"
        #stream-name = "keyspaces-stream"
        #stream-arn = "arn:aws:kinesis:us-east-1:123456789012:stream/keyspaces-stream"
    }
    
    # S3 Connector
    #connector {
    #     target-mapper = "software.amazon.ssa.streams.connector.s3.S3TargetMapper"
    #     bucket-id = "my-vector-bucket"
    #     prefix = "export/tlp_stress/keyvalue/incremental"
    #     timestamp-partition = "hours"
    #     region = "us-east-1"
    #     format = "avro"
    #     max-retries = 3  
    #}
    connector{
       target-mapper = "software.amazon.ssa.streams.connector.s3.S3VectorTargetMapper"
       bucket-id = "my-vector-bucket"
       region = "us-east-1"
       max-retries = 3
       embedding-model = "amazon.titan-embed-text-v2:0"
       index-name = "my-vector-index2"
       embedding-field = "description"
       key-field = "key"
       metadata-fields = ["value"]
       dimensions = 256
    }
    
    coordinator {
        skip-shard-sync-at-worker-initialization-if-leases-exist = true
        parent-shard-poll-interval-millis = 1000
        shard-consumer-dispatch-poll-interval-millis = 500
    }
    lease-management {
        shard-sync-interval-millis = 60000
        leases-recovery-auditor-inconsistency-confidence-threshold = 3
        leases-recovery-auditor-execution-frequency-millis = 5000
        lease-assignment-interval-millis = 1000
    }
    processor {
        call-process-records-even-for-empty-record-list = true
    }
   
    
}


datastax-java-driver {

  basic {
    # Contact points for Amazon Keyspaces (will be overridden programmatically)
    contact-points = ["cassandra.us-east-1.amazonaws.com:9142"]
    
    load-balancing-policy {
        local-datacenter = ${keyspaces-cdc-streams.stream.region}
    }
    request.consistency = LOCAL_QUORUM
    # Local datacenter (will be overridden programmatically)
    
 
  }
  
  # SSL configuration (required for Amazon Keyspaces)
  advanced.ssl-engine-factory {
    class = DefaultSslEngineFactory
  }
  
  # Authentication (using AWS credentials)
  advanced.auth-provider {
    class = software.aws.mcs.auth.SigV4AuthProvider
    region = ${keyspaces-cdc-streams.stream.region}
  }
  
  # Connection pool settings
  advanced.connection.pool {
    local.size = 3
    remote.size = 1
  }
  
advanced.ssl-engine-factory {
      class = DefaultSslEngineFactory
      hostname-validation = false
    }
  
  # Timeout settings
  advanced.request.timeout = 5 seconds
  advanced.connection.connect-timeout = 5 seconds
  advanced.connection.init-query-timeout = 5 seconds
  
  # Reconnection policy
  advanced.reconnection-policy {
    class = ExponentialReconnectionPolicy
    base-delay = 1 second
    max-delay = 60 seconds
  }
} 